import{_ as l,M as i,p,q as c,Q as a,t as s,N as e,V as t,a1 as o}from"./framework-e921cdd2.js";const r="/images/hero.png",d={},u=o(`<h1 id="静态资源" tabindex="-1"><a class="header-anchor" href="#静态资源" aria-hidden="true">#</a> 静态资源</h1><h2 id="相对路径" tabindex="-1"><a class="header-anchor" href="#相对路径" aria-hidden="true">#</a> 相对路径</h2><p>你可以在你的 Markdown 内容中使用相对路径来引用静态资源：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token url"><span class="token operator">!</span>[<span class="token content">图片</span>](<span class="token url">./image.png</span>)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>一般情况下，我们推荐你使用这种方式来引用图片，因为人们通常会把图片放在引用它的 Markdown 文件附近。</p><h2 id="public-文件" tabindex="-1"><a class="header-anchor" href="#public-文件" aria-hidden="true">#</a> Public 文件</h2><p>你可以把一些静态资源放在 Public 目录中，它们会被复制到最终生成的网站的根目录下。</p><p>默认的 Public 目录是 <code>.vuepress/public</code> ，可以通过配置来修改。</p><p>在下列这些情况中，你可能会用到它：</p><ul><li>你可能需要提供一些静态资源，但是它们并不直接被你的 Markdown 文件引用，比如 favicon 和 PWA 图标。</li><li>你可能想要托管一些共享的静态资源，甚至可能需要在你的网站外部引用它，比如 Logo 图片。</li><li>你可能想在你的 Markdown 内容中通过绝对路径来引入图片。</li></ul><p>以我们文档的源文件为例，我们把 VuePress 的 Logo 放在了 Public 目录下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>└─ docs
   ├─ .vuepress
   <span class="token operator">|</span>  └─ public
   <span class="token operator">|</span>     └─ images
   <span class="token operator">|</span>        └─ hero.png  <span class="token comment"># &lt;- Logo 文件</span>
   └─ guide
      └─ assets.md       <span class="token comment"># &lt;- 我们在这里</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以这样在当前页面引用 Logo ：</p><p><strong>Input</strong></p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token url"><span class="token operator">!</span>[<span class="token content">VuePress Logo</span>](<span class="token url">/images/hero.png</span>)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Output</strong></p><p><img src="`+r+'" alt="VuePress Logo"></p>',17),m={class:"custom-container tip"},v=a("p",{class:"custom-container-title"},"提示",-1),k=a("h3",{id:"base-helper",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#base-helper","aria-hidden":"true"},"#"),s(" Base Helper")],-1),g=a("code",null,'"/"',-1),h=a("code",null,"base",-1),b=o(`<p>举例来说，如果你想要把网站部署到 <code>https://foo.github.io/bar/</code> ，那么应该把 <code>base</code> 设置为 <code>&quot;/bar/&quot;</code> ，此时你必须在 Markdown 文件中这样引用 Public 文件：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token url"><span class="token operator">!</span>[<span class="token content">VuePress Logo</span>](<span class="token url">/bar/images/hero.png</span>)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>显然，一旦某一天你修改了 <code>base</code>，这样的路径引用将会显得异常脆弱。这也是我们推荐你使用相对路径来引用静态文件的原因。</p><p>为了解决这个问题，VuePress 提供了内置的一个 Helper <code>$withBase</code> ，它可以帮助你生成正确的路径：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$withBase(&#39;/images/hero.png&#39;)<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>VuePress Logo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在 Markdown 中使用这个 Helper 会显得有些冗长，因此它可能对主题和插件作者更有帮助。</p>`,6),_={class:"custom-container tip"},f=a("p",{class:"custom-container-title"},"提示",-1),w=o(`<h2 id="依赖包和路径别名" tabindex="-1"><a class="header-anchor" href="#依赖包和路径别名" aria-hidden="true">#</a> 依赖包和路径别名</h2><p>尽管这不是常见用法，但是你可以从依赖包中引用图片：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> package-name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token url"><span class="token operator">!</span>[<span class="token content">来自依赖包的图片</span>](<span class="token url">package-name/image.png</span>)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在配置文件中设置的路径别名也同样支持：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&#39;@alias&#39;</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./path/to/some/dir&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token url"><span class="token operator">!</span>[<span class="token content">来自路径别名的图片</span>](<span class="token url">@alias/image.png</span>)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,7),x={class:"custom-container tip"},P=a("p",{class:"custom-container-title"},"提示",-1);function V(L,q){const n=i("RouterLink");return p(),c("div",null,[u,a("div",m,[v,a("p",null,[s("配置参考： "),e(n,{to:"/reference/config.html#public"},{default:t(()=>[s("public")]),_:1})])]),k,a("p",null,[s("如果你的网站部署在非根路径下，即 "),e(n,{to:"/reference/config.html#base"},{default:t(()=>[s("base")]),_:1}),s(" 不是 "),g,s(" ，你需要把 "),h,s(" 添加到 Public 文件的绝对路径前。")]),b,a("div",_,[f,a("p",null,[s("配置参考： "),e(n,{to:"/reference/config.html#base"},{default:t(()=>[s("base")]),_:1})])]),w,a("div",x,[P,a("p",null,[s("配置参考： "),e(n,{to:"/reference/config.html#alias"},{default:t(()=>[s("alias")]),_:1})])])])}const B=l(d,[["render",V],["__file","assets.html.vue"]]);export{B as default};
