import{_ as d,M as c,p as i,q as r,Q as n,t as e,N as a,V as t,a1 as o}from"./framework-e921cdd2.js";const p={},u=o('<h1 id="从-v1-迁移" tabindex="-1"><a class="header-anchor" href="#从-v1-迁移" aria-hidden="true">#</a> 从 v1 迁移</h1><div class="custom-container warning"><p class="custom-container-title">注意</p><p>VuePress v1 的插件和主题与 VuePress v2 不兼容。你需要将它们升级到与 v2 对应的版本。</p></div><p>VuePress v2 的一些主要改动和优化：</p><ul><li>VuePress v2 现在使用 Vue 3 ，因此你要保证你的组件和其他客户端文件是适用于 Vue 3 的。</li><li>VuePress v2 是使用 TypeScript 开发的，因此它现在提供了更好的类型支持。我们强烈推荐你使用 TypeScript 来开发插件和主题。 VuePress 配置文件也同样支持 TypeScript ，你可以直接使用 <code>.vuepress/config.ts</code> 。</li><li>VuePress v2 支持使用 Webpack 和 Vite 作为打包工具。你甚至可以在开发模式使用 Vite 来获取更好的开发体验，而在构建模式使用 Webpack 来获取更好的浏览器兼容性。</li></ul><p>VuePress v2 的核心思想和流程是和 v1 一致的，但 v2 API 经过了重新设计，更加标准化。因此在将现有的 v1 项目迁移至 v2 时，你很可能会遇到一些 Breaking Changes 。本指南将帮助你将 v1 的站点 / 插件 / 主题迁移至 v2 。</p><ul><li>如果你是一个普通用户，你需要阅读 <a href="#%E7%BB%99%E7%94%A8%E6%88%B7">给用户</a> 的指南。</li><li>如果你是一个插件作者，你需要阅读 <a href="#%E7%BB%99%E6%8F%92%E4%BB%B6%E4%BD%9C%E8%80%85">给插件作者</a> 的指南。</li><li>如果你是一个主题作者，你需要阅读 <a href="#%E7%BB%99%E4%B8%BB%E9%A2%98%E4%BD%9C%E8%80%85">给主题作者</a> 的指南。</li></ul><h2 id="给用户" tabindex="-1"><a class="header-anchor" href="#给用户" aria-hidden="true">#</a> 给用户</h2><h3 id="用户配置变更" tabindex="-1"><a class="header-anchor" href="#用户配置变更" aria-hidden="true">#</a> 用户配置变更</h3><h4 id="shouldprefetch" tabindex="-1"><a class="header-anchor" href="#shouldprefetch" aria-hidden="true">#</a> shouldPrefetch</h4><p>默认值从 <code>() =&gt; true</code> 更改为 <code>false</code> 。</p><h4 id="extrawatchfiles" tabindex="-1"><a class="header-anchor" href="#extrawatchfiles" aria-hidden="true">#</a> extraWatchFiles</h4><p>移除。</p>',12),h=n("h4",{id:"patterns",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#patterns","aria-hidden":"true"},"#"),e(" patterns")],-1),m=n("p",null,[e("重命名为 "),n("code",null,"pagePatterns"),e(" 。")],-1),k=n("h4",{id:"plugins",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#plugins","aria-hidden":"true"},"#"),e(" plugins")],-1),f={href:"https://v1.vuepress.vuejs.org/zh/plugin/using-a-plugin.html#babel-%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"},_={href:"https://v1.vuepress.vuejs.org/zh/plugin/using-a-plugin.html#%E5%AF%B9%E8%B1%A1%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"},g=n("h4",{id:"markdown-linenumbers",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#markdown-linenumbers","aria-hidden":"true"},"#"),e(" markdown.lineNumbers")],-1),v=o('<p>默认值从 <code>false</code> 更改为 <code>true</code> 。</p><h4 id="markdown-slugify" tabindex="-1"><a class="header-anchor" href="#markdown-slugify" aria-hidden="true">#</a> markdown.slugify</h4><p>移除。</p><p>如果你无论如何都要修改 slugify 函数，分别设置以下选项：</p><ul><li><code>markdown.anchor.slugify</code></li><li><code>markdown.toc.slugify</code></li><li><code>markdown.extractHeaders.slugify</code></li></ul><h4 id="markdown-pagesuffix" tabindex="-1"><a class="header-anchor" href="#markdown-pagesuffix" aria-hidden="true">#</a> markdown.pageSuffix</h4><p>移除。</p><h4 id="markdown-externallinks" tabindex="-1"><a class="header-anchor" href="#markdown-externallinks" aria-hidden="true">#</a> markdown.externalLinks</h4>',8),b=n("h4",{id:"markdown-toc",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#markdown-toc","aria-hidden":"true"},"#"),e(" markdown.toc")],-1),x=n("p",null,"有改动。",-1),w=n("h4",{id:"markdown-plugins",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#markdown-plugins","aria-hidden":"true"},"#"),e(" markdown.plugins")],-1),y=n("p",null,"移除。",-1),B=n("h4",{id:"markdown-extendmarkdown",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#markdown-extendmarkdown","aria-hidden":"true"},"#"),e(" markdown.extendMarkdown")],-1),E=n("p",null,"移除。",-1),C=n("h4",{id:"markdown-extractheaders",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#markdown-extractheaders","aria-hidden":"true"},"#"),e(" markdown.extractHeaders")],-1),P=n("p",null,"有修改。",-1),A=n("h4",{id:"webpack-相关配置",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#webpack-相关配置","aria-hidden":"true"},"#"),e(" Webpack 相关配置")],-1),S=n("code",null,"@vuepress/bundler-webpack",-1),V=o("<ul><li><code>postcss</code>：移动至 <code>bundlerConfig.postcss</code></li><li><code>stylus</code>：移动至 <code>bundlerConfig.stylus</code></li><li><code>scss</code>：移动至 <code>bundlerConfig.scss</code></li><li><code>sass</code>：移动至 <code>bundlerConfig.sass</code></li><li><code>less</code>：移动至 <code>bundlerConfig.less</code></li><li><code>chainWebpack</code>：移动至 <code>bundlerConfig.chainWebpack</code></li><li><code>configureWebpack</code>：移动至 <code>bundlerConfig.configureWebpack</code></li><li><code>evergreen</code>：移动至 <code>bundlerConfig.evergreen</code> ，且默认值从 <code>false</code> 更改为 <code>true</code> 。</li></ul>",1),j=n("h3",{id:"frontmatter-变更",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#frontmatter-变更","aria-hidden":"true"},"#"),e(" Frontmatter 变更")],-1),F=n("h4",{id:"meta",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#meta","aria-hidden":"true"},"#"),e(" meta")],-1),W=n("p",null,"移除。",-1),I=o(`<div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">head</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token punctuation">-</span> meta
    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> foo
      <span class="token key atrule">content</span><span class="token punctuation">:</span> bar
  <span class="token punctuation">-</span> <span class="token punctuation">-</span> link
    <span class="token punctuation">-</span> <span class="token key atrule">rel</span><span class="token punctuation">:</span> canonical
      <span class="token key atrule">href</span><span class="token punctuation">:</span> foobar
  <span class="token punctuation">-</span> <span class="token punctuation">-</span> script
    <span class="token punctuation">-</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token punctuation">-</span> console.log(&#39;hello from frontmatter&#39;);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>和以下结构相同：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// .vuepress/config.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">head</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">[</span><span class="token string">&#39;meta&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">&#39;bar&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string">&#39;link&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">rel</span><span class="token operator">:</span> <span class="token string">&#39;canonical&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">href</span><span class="token operator">:</span> <span class="token string">&#39;foobar&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string">&#39;script&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">console.log(&#39;hello from frontmatter&#39;);</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="永久链接-patterns-变更" tabindex="-1"><a class="header-anchor" href="#永久链接-patterns-变更" aria-hidden="true">#</a> 永久链接 Patterns 变更</h3><ul><li><code>:i_month</code>：移除</li><li><code>:i_day</code>：移除</li><li><code>:minutes</code>：移除（v1 文档中未列出）</li><li><code>:seconds</code>：移除（v1 文档中未列出）</li><li><code>:regular</code>：重命名为 <code>:raw</code></li></ul>`,5),H=n("h3",{id:"调色板系统变更",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#调色板系统变更","aria-hidden":"true"},"#"),e(" 调色板系统变更")],-1),M=n("p",null,[e("VuePress v1 的 Stylus 调色板系统 （即 "),n("code",null,"styles/palette.styl"),e(" 和 "),n("code",null,"styles/index.styl"),e("） 不再由 VuePress Core 默认提供支持。")],-1),D=n("p",null,"主题作者可以使用自己的方式来为用户提供自定义样式的能力，而不必被限制在 Stylus 当中。",-1),L=n("h3",{id:"约定文件变更",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#约定文件变更","aria-hidden":"true"},"#"),e(" 约定文件变更")],-1),N=n("h4",{id:"vuepress-enhanceapp-js",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#vuepress-enhanceapp-js","aria-hidden":"true"},"#"),e(" .vuepress/enhanceApp.js")],-1),T=n("p",null,[e("重命名为 "),n("code",null,".vuepress/clientAppEnhance.{js,ts}"),e(" 。")],-1),G=n("p",null,"函数接收的参数也有改动。",-1),R=n("h4",{id:"vuepress-components",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#vuepress-components","aria-hidden":"true"},"#"),e(" .vuepress/components/")],-1),z=n("p",null,"在该目录下的文件不会被自动注册为 Vue 组件。",-1),$=n("code",null,".vuepress/clientAppEnhance.{js,ts}",-1),q=n("h4",{id:"vuepress-theme",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#vuepress-theme","aria-hidden":"true"},"#"),e(" .vuepress/theme/")],-1),Q=n("p",null,"即使该目录存在，也不会被隐式默认当作本地主题目录。",-1),U=o('<h3 id="markdown-插槽变更" tabindex="-1"><a class="header-anchor" href="#markdown-插槽变更" aria-hidden="true">#</a> Markdown 插槽变更</h3><p>Markdown 插槽不再被支持。</p><h3 id="插件-api-变更" tabindex="-1"><a class="header-anchor" href="#插件-api-变更" aria-hidden="true">#</a> 插件 API 变更</h3><ul><li><code>plugins</code>：移除</li><li><code>ready</code>：重命名为 <code>onPrepared</code></li><li><code>updated</code>：重命名为 <code>onWatched</code></li><li><code>generated</code>：重命名为 <code>onGenerated</code></li><li><code>additionalPages</code>：移除，改为在 <code>onInitialized</code> Hook 中使用 <code>app.pages.push(createPage())</code></li><li><code>clientDynamicModules</code>：移除，改为在 <code>onPrepared</code> Hook 中使用 <code>app.writeTemp()</code></li><li><code>enhanceAppFiles</code>：重命名为 <code>clientAppEnhanceFiles</code></li><li><code>globalUIComponents</code>：重命名为 <code>clientAppRootComponentFiles</code></li><li><code>clientRootMixin</code>：重命名为<code>clientAppSetupFiles</code></li><li><code>extendMarkdown</code>：重命名为 <code>extendsMarkdown</code></li><li><code>chainMarkdown</code>：移除</li><li><code>extendPageData</code>：重命名为 <code>extendsPageData</code></li><li><code>extendsCli</code>：移除</li><li><code>configureWebpack</code>：移除</li><li><code>chainWebpack</code>：移除</li><li><code>beforeDevServer</code>：移除</li><li><code>afterDevServer</code>：移除</li></ul>',4),J=n("h3",{id:"主题-api-变更",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#主题-api-变更","aria-hidden":"true"},"#"),e(" 主题 API 变更")],-1),K=n("h4",{id:"layouts",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#layouts","aria-hidden":"true"},"#"),e(" layouts")],-1),O=n("p",null,"现在你需要手动设置布局目录或布局组件。",-1),X=o('<h4 id="extend" tabindex="-1"><a class="header-anchor" href="#extend" aria-hidden="true">#</a> extend</h4><p>重命名为 <code>extends</code> 。</p><p>你仍然可以通过 <code>extends: &#39;parent-theme&#39;</code> 来继承一个父主题，这将会继承其插件和布局等。</p><p><code>@theme</code> 和 <code>@parent-theme</code> 别名不再生效。</p><p>现在支持主题的多级继承。</p><h3 id="cli-变更" tabindex="-1"><a class="header-anchor" href="#cli-变更" aria-hidden="true">#</a> CLI 变更</h3><h4 id="eject-命令" tabindex="-1"><a class="header-anchor" href="#eject-命令" aria-hidden="true">#</a> eject 命令</h4><p>移除。</p><h4 id="cache-选项" tabindex="-1"><a class="header-anchor" href="#cache-选项" aria-hidden="true">#</a> cache 选项</h4><ul><li><code>-c, --cache [cache]</code>：修改为 <code>--cache &lt;cache&gt;</code> ，意味着 <code>-c</code> 不再是 <code>cache</code> 选项的缩写，并且 <code>cache</code> 选项的值不再是可选的。</li><li><code>--no-cache</code>：重命名为 <code>--clean-cache</code> 。</li></ul><h3 id="默认主题变更" tabindex="-1"><a class="header-anchor" href="#默认主题变更" aria-hidden="true">#</a> 默认主题变更</h3><h4 id="内置组件" tabindex="-1"><a class="header-anchor" href="#内置组件" aria-hidden="true">#</a> 内置组件</h4><ul><li><code>&lt;CodeGroup /&gt;</code> 和 <code>&lt;CodeBlock /&gt;</code> 重命名为 <code>&lt;CodeGroup /&gt;</code> 和 <code>&lt;CodeGroupItem /&gt;</code></li><li><code>&lt;Badge /&gt;</code><ul><li><code>$badgeErrorColor</code> 调色板变量重命名为 <code>$badgeDangerColor</code></li><li><code>type</code> Prop 现在只接受 <code>tip</code> 、 <code>warning</code> 和 <code>danger</code></li></ul></li></ul><h4 id="调色板系统" tabindex="-1"><a class="header-anchor" href="#调色板系统" aria-hidden="true">#</a> 调色板系统</h4><p>默认主题的调色板系统迁移为 SASS 和 CSS 变量。</p>',15),Y=n("h4",{id:"主题配置",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#主题配置","aria-hidden":"true"},"#"),e(" 主题配置")],-1),Z=n("p",null,"默认主题的配置有大量变更。",-1),ee=n("h3",{id:"官方插件变更",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#官方插件变更","aria-hidden":"true"},"#"),e(" 官方插件变更")],-1),ne=o('<h3 id="社区主题和插件" tabindex="-1"><a class="header-anchor" href="#社区主题和插件" aria-hidden="true">#</a> 社区主题和插件</h3><p>v1 的主题和插件和 v2 并不兼容。</p><p>请确保你在使用的主题和插件已经支持 v2 ，并前往它们各自的文档查看迁移指南。</p><h2 id="给插件作者" tabindex="-1"><a class="header-anchor" href="#给插件作者" aria-hidden="true">#</a> 给插件作者</h2><p>请先浏览 <a href="#%E6%8F%92%E4%BB%B6-api-%E5%8F%98%E6%9B%B4">插件 API 变更</a> 。</p><p>一些主要的 Breaking Changes ：</p><ul><li>你不能再在你的插件中使用其他插件了，这避免了很多由于插件嵌套引发的问题。如果你的插件依赖于别的插件，你应在文档中列出他们。</li><li>大部分 v1 Hook 都在 v2 中存在等效的 Hook 或实现方式。唯一的例外是 <code>extendsCli</code> ，它被移除了。</li><li>Webpack 相关的 Hook 都被移除了，因为 VuePress Core 已经和 Webpack 解耦了。如果你仍然想要在插件中修改 Webpack 配置，可以尝试直接修改 <code>app.options.bundlerConfig</code> 。</li></ul><h2 id="给主题作者" tabindex="-1"><a class="header-anchor" href="#给主题作者" aria-hidden="true">#</a> 给主题作者</h2><p>请先浏览 <a href="#%E6%8F%92%E4%BB%B6-api-%E5%8F%98%E6%9B%B4">插件 API 变更</a> 和 <a href="#%E4%B8%BB%E9%A2%98-api-%E5%8F%98%E6%9B%B4">主题 API 变更</a>。</p><p>虽然我们不允许在插件中使用其他插件了，但是你仍然可以在你的主题中使用插件。</p><p>一些主要的 Breaking Changes ：</p>',11),ae=n("strong",null,"主题目录结构约定",-1),se=n("li",null,[n("code",null,"theme/enhanceApp.js"),e(" 或 "),n("code",null,"theme/clientAppEnhance.{js,ts}"),e(" 文件不会被隐式作为 Client App Enhance 文件。你需要在 "),n("code",null,"clientAppEnhanceFiles"),e(" Hook 中显式指定它。")],-1),te=n("code",null,"theme/global-components/",-1),oe=n("code",null,"clientAppEnhance.{js,ts}",-1),le=n("li",null,[n("code",null,"theme/layouts/"),e(" 目录下的文件不会被自动注册为布局组件。你需要通过 "),n("code",null,"layouts"),e(" 配置项来显式指定。")],-1),ce=n("li",null,[n("code",null,"theme/templates/"),e(" 目录下的文件不会被自动作为 dev / ssr 的模板。")],-1),de=n("li",null,[e("你始终需要提供主题入口文件，并且不要使用 "),n("code",null,'"main": "layouts/Layout.vue"'),e(" 作为主题入口。")],-1),ie=n("li",null,[e("考虑到可扩展性， "),n("code",null,"$site.pages"),e(" 不再可用。")],-1);function re(pe,ue){const s=c("RouterLink"),l=c("ExternalLinkIcon");return i(),r("div",null,[u,n("p",null,[e("你可以手动在 "),a(s,{to:"/reference/plugin-api.html#onwatched"},{default:t(()=>[e("onWatched")]),_:1}),e(" Hook 中监听文件变化。")]),h,m,k,n("p",null,[e("只允许 "),n("a",f,[e("Babel 式"),a(l)]),e(" 选项。")]),n("p",null,[e("v2 不再支持 "),n("a",_,[e("对象式"),a(l)]),e(" 选项。")]),g,n("p",null,[e("移动至 "),a(s,{to:"/reference/config.html#markdown-code-linenumbers"},{default:t(()=>[e("markdown.code.lineNumbers")]),_:1}),e(" 。")]),v,n("p",null,[e("移动至 "),a(s,{to:"/reference/config.html#markdown-links"},{default:t(()=>[e("markdown.links.externalAttrs")]),_:1}),e(" 。")]),b,x,n("p",null,[e("参考 "),a(s,{to:"/reference/config.html#markdown-toc"},{default:t(()=>[e("配置 > markdown.toc")]),_:1})]),w,y,n("p",null,[e("在 "),a(s,{to:"/reference/plugin-api.html#extendsmarkdown"},{default:t(()=>[e("extendsMarkdown")]),_:1}),e(" Hook 中使用 markdown-it 插件。")]),B,E,n("p",null,[e("使用 "),a(s,{to:"/reference/plugin-api.html#extendsmarkdown"},{default:t(()=>[e("extendsMarkdown")]),_:1}),e(" Hook 。")]),C,P,n("p",null,[e("参考 "),a(s,{to:"/reference/config.html#markdown-extractheaders"},{default:t(()=>[e("配置 > markdown.extractHeaders")]),_:1})]),A,n("p",null,[e("所有 Webpack 相关的配置都移动至 "),S,e(" 的配置项中，所以你需要在 "),a(s,{to:"/reference/config.html#bundlerconfig"},{default:t(()=>[e("bundlerConfig")]),_:1}),e(" 中设置它们：")]),V,n("p",null,[e("参考 "),a(s,{to:"/reference/bundler/webpack.html"},{default:t(()=>[e("打包工具 > Webpack")]),_:1})]),j,F,W,n("p",null,[e("改为使用 "),a(s,{to:"/reference/frontmatter.html#head"},{default:t(()=>[e("head")]),_:1}),e(" 。例如：")]),I,n("p",null,[e("参考 "),a(s,{to:"/reference/frontmatter.html#permalinkpattern"},{default:t(()=>[e("Frontmatter > permalinkPattern")]),_:1}),e(" 。")]),H,M,n("p",null,[e("调色板系统提取到了 "),a(s,{to:"/reference/plugin/palette.html"},{default:t(()=>[e("@vuepress/plugin-palette")]),_:1}),e(" 当中。")]),D,n("p",null,[e("如果你使用的是默认主题，那么调色板系统仍然存在，但改为使用 SASS ，并且大部分变量都迁移为 CSS 变量。参考 "),a(s,{to:"/reference/default-theme/styles.html"},{default:t(()=>[e("默认主题 > 样式")]),_:1}),e(" 。")]),L,N,T,G,n("p",null,[e("参考 "),a(s,{to:"/reference/client-api.html#defineclientappenhance"},{default:t(()=>[e("客户端 API > defineClientAppEnhance")]),_:1}),e(" 。")]),R,z,n("p",null,[e("你需要使用 "),a(s,{to:"/reference/plugin/register-components.html"},{default:t(()=>[e("@vuepress/plugin-register-components")]),_:1}),e(" ，或者在 "),$,e(" 中手动注册你的组件。")]),q,Q,n("p",null,[e("你需要在 "),a(s,{to:"/reference/config.html#theme"},{default:t(()=>[e("theme")]),_:1}),e(" 配置项中显式声明本地主题的路径。")]),U,n("p",null,[e("参考 "),a(s,{to:"/reference/plugin-api.html"},{default:t(()=>[e("插件 API")]),_:1}),e(" 。")]),J,K,O,n("p",null,[e("参考 "),a(s,{to:"/reference/theme-api.html#layouts"},{default:t(()=>[e("主题 API > layouts")]),_:1}),e(" 。")]),X,n("p",null,[e("参考 "),a(s,{to:"/reference/default-theme/styles.html"},{default:t(()=>[e("默认主题 > 样式")]),_:1}),e(" 。")]),Y,Z,n("p",null,[e("参考 "),a(s,{to:"/reference/default-theme/config.html"},{default:t(()=>[e("默认主题 > 配置")]),_:1}),e(" 。")]),ee,n("p",null,[e("参考 "),a(s,{to:"/reference/plugin/"},{default:t(()=>[e("官方插件")]),_:1}),e(" 。")]),ne,n("ul",null,[n("li",null,[e("所谓的 "),ae,e(" 不再存在。 "),n("ul",null,[se,n("li",null,[te,e(" 目录下的文件不会被自动注册为 Vue 组件。你需要使用 "),a(s,{to:"/reference/plugin/register-components.html"},{default:t(()=>[e("@vuepress/plugin-register-components")]),_:1}),e(" ，或者在 "),oe,e(" 中手动注册组件。")]),le,ce,de])]),n("li",null,[e("Stylus 不再是默认的 CSS 预处理器，并且 Stylus 调色板系统不再被默认支持。如果你仍然想要使用和 v1 类似的调色板系统，可以使用 "),a(s,{to:"/reference/plugin/palette.html"},{default:t(()=>[e("@vuepress/plugin-palette")]),_:1}),e(" 。")]),n("li",null,[e("由 Prism.js 提供的 Markdown 代码块的语法高亮不再被默认支持。你可以选择使用 "),a(s,{to:"/reference/plugin/prismjs.html"},{default:t(()=>[e("@vuepress/plugin-prismjs")]),_:1}),e(" 或 "),a(s,{to:"/reference/plugin/shiki.html"},{default:t(()=>[e("@vuepress/plugin-shiki")]),_:1}),e(" ，或者用你自己的方式实现语法高亮。")]),ie])])}const me=d(p,[["render",re],["__file","migration.html.vue"]]);export{me as default};
